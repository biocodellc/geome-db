plugins {
    id 'java'
    id 'war'
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.1.9"
}

compileJava {
    options.compilerArgs << '-parameters'
}
// build API endpoint and stores in swagger directory
resolve {
    outputFileName = 'geomeAPI'
    outputFormat = 'JSON'
    prettyPrint = 'TRUE'
    classpath = sourceSets.main.runtimeClasspath
    resourcePackages = ['biocode.fims']
    outputDir = file('swagger')
}

repositories {
    mavenCentral()
}

apply plugin: "application"

dependencies {
    compile 'jstl:jstl:1.2'

    compile group: 'org.springframework', name: 'spring-web', version: '4.3.14.RELEASE'
    compile group: 'org.glassfish.jersey.bundles.repackaged', name: 'jersey-guava', version: '2.25.1'

    // this version is temporary until https://github.com/dhatim/fastexcel/pull/75 is merged & released
    // we can remove the above maven-dev-releases as well
    //compile group: 'org.dhatim', name: 'fastexcel', version: '41c4f50-SNAPSHOT'
    // https://mvnrepository.com/artifact/org.dhatim/fastexcel
    compile group: 'com.github.rzymek', name: 'opczip', version: '1.0.1'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.2'

    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.27'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.27'
    compile 'org.apache.poi:poi:4.0.0'
    compile 'org.apache.poi:poi-ooxml:4.0.0'

    compile 'com.sun.mail:javax.mail:1.5.5'
    compile 'joda-time:joda-time:2.1' // TODO replace with java 8 Date/Times
    compile 'org.apache.httpcomponents:httpcore:4.2.1'
    compile 'org.apache.httpcomponents:httpclient:4.2.1'
    compile 'com.ibm.icu:icu4j:3.4.4'

    compile group: 'org.parboiled', name: 'parboiled-java', version: '1.1.8'
    compile group: 'com.auth0', name: 'java-jwt', version: '3.8.1'

    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.8.11'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.9.6'

    // aspectj
    runtime group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'
    compile group: 'org.springframework', name: 'spring-aop', version: '4.3.14.RELEASE'

    compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.27'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.27'
    compile group: 'org.glassfish.jersey.ext', name: 'jersey-spring4', version: '2.27'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.6.RELEASE'
    compile 'org.springframework:spring-jdbc:4.3.14.RELEASE'

    compile 'commons-validator:commons-validator:1.5.0'
    // needed for apache-poi to evaluate array/matrix functions
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.0'
    compile 'org.apache.commons:commons-dbcp2:2.1.1'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.4'
    compile 'org.apache.commons:commons-lang3:3.8'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'

    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.11'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.11'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.2.11'
    compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'

    // https://mvnrepository.com/artifact/commons-net/commons-net
    compile group: 'commons-net', name: 'commons-net', version: '3.6'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.1'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.8.4'
    compile 'org.springframework.data:spring-data-jpa:1.10.1.RELEASE'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
    // https://mvnrepository.com/artifact/org.eclipse.persistence/org.eclipse.persistence.moxy
    compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.1.0.Final'
    compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.moxy', version: '2.7.13'
    implementation group: 'org.eclipse.jetty', name: 'jetty-servlets', version: '9.4.56.v20240826'
    compile 'org.hibernate:hibernate-entitymanager:5.1.0.Final'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'

    compile 'javax.servlet:javax.servlet-api:4.0.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.19'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'

    compile 'commons-cli:commons-cli:1.4'

    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

    testCompile "junit:junit-dep:4.10"
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.14.RELEASE'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-module-junit4:1.5.6'
    testCompile 'org.powermock:powermock-api-mockito:1.5.6'

    // tried 0.12.11 failed
    // tried 0.7.5 failed
    // tried 0.8.7 failed
    implementation group: 'org.dhatim', name: 'fastexcel', version: '0.9.13'
    implementation 'org.glassfish.jersey.core:jersey-common:2.27'


}

//=============================
//= application configuration
//=============================
mainClassName = ''

task harvestSraBioSamples(type: JavaExec) {
    classpath = configurations.compile + sourceSets.main.runtimeClasspath

    main = "biocode.fims.run.SraAccessionHarvesterRunner"
}

task reportSraSubmissions(type: JavaExec) {
    classpath = configurations.compile + sourceSets.main.runtimeClasspath

    main = "biocode.fims.run.SraSubmissionReporterRunner"
}

startScripts {
    classpath = files(jar.archivePath, configurations.compile, configurations.runtime)
}

task copyEnvironmentProps(type: Copy) {
    from('src/main/environment/' + project.findProperty("environment")) {
        include '**/*.properties'
        include '**/*.props'
    }
    into 'build/resources/main'
}

tasks.war.dependsOn("copyEnvironmentProps")

war {
    enabled = true
    webXml = file('src/main/environment/' + project.findProperty("environment") + '/web.xml')

    from('swagger/') {
        include 'geomeAPI.json'
        into 'docs'
    }

    from('src/main/web/') {
        include 'docs/**'
        into ''
    }
    from('docs/') {
        include 'helpDocumentation.pdf'
        into 'docs'
    }
    from('src/main/web/') {
        include 'apidocs/**'
        into ''
    }
}

